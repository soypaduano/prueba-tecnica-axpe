{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction useScrollDirection() {\n  _s();\n\n  const [scrollDirection, setScrollDirection] = useState(null);\n  useEffect(() => {\n    let lastScrollY = window.pageYOffset;\n\n    const updateScrollDirection = () => {\n      const scrollY = window.pageYOffset;\n      const direction = scrollY > lastScrollY ? \"down\" : \"up\";\n\n      if (direction !== scrollDirection && (scrollY - lastScrollY > 10 || scrollY - lastScrollY < -10)) {\n        setScrollDirection(direction);\n      }\n\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n    };\n\n    window.addEventListener(\"scroll\", updateScrollDirection); // add event listener\n\n    return () => {\n      window.removeEventListener(\"scroll\", updateScrollDirection); // clean up\n    };\n  }, [scrollDirection]);\n  return scrollDirection;\n}\n\n_s(useScrollDirection, \"wOqEq/0qzHTM+eZxoGcTM6raMBY=\");\n\n;","map":{"version":3,"sources":["/Users/padu/Desktop/prueba-tecnica-axpe/react-meetup/src/components/layout/useScrollDirection.js"],"names":["useScrollDirection","scrollDirection","setScrollDirection","useState","useEffect","lastScrollY","window","pageYOffset","updateScrollDirection","scrollY","direction","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,kBAAT,GAA8B;AAAA;;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCC,QAAQ,CAAC,IAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,WAAW,GAAGC,MAAM,CAACC,WAAzB;;AAEA,UAAMC,qBAAqB,GAAG,MAAM;AAClC,YAAMC,OAAO,GAAGH,MAAM,CAACC,WAAvB;AACA,YAAMG,SAAS,GAAGD,OAAO,GAAGJ,WAAV,GAAwB,MAAxB,GAAiC,IAAnD;;AACA,UAAIK,SAAS,KAAKT,eAAd,KAAkCQ,OAAO,GAAGJ,WAAV,GAAwB,EAAxB,IAA8BI,OAAO,GAAGJ,WAAV,GAAwB,CAAC,EAAzF,CAAJ,EAAkG;AAChGH,QAAAA,kBAAkB,CAACQ,SAAD,CAAlB;AACD;;AACDL,MAAAA,WAAW,GAAGI,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,CAAtC;AACD,KAPD;;AAQAH,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCH,qBAAlC,EAXc,CAW4C;;AAC1D,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCJ,qBAArC,EADW,CACkD;AAC9D,KAFD;AAGD,GAfQ,EAeN,CAACP,eAAD,CAfM,CAAT;AAiBA,SAAOA,eAAP;AACD;;GArBMD,kB;;AAqBN","sourcesContent":["function useScrollDirection() {\n    const [scrollDirection, setScrollDirection] = useState(null);\n  \n    useEffect(() => {\n      let lastScrollY = window.pageYOffset;\n  \n      const updateScrollDirection = () => {\n        const scrollY = window.pageYOffset;\n        const direction = scrollY > lastScrollY ? \"down\" : \"up\";\n        if (direction !== scrollDirection && (scrollY - lastScrollY > 10 || scrollY - lastScrollY < -10)) {\n          setScrollDirection(direction);\n        }\n        lastScrollY = scrollY > 0 ? scrollY : 0;\n      };\n      window.addEventListener(\"scroll\", updateScrollDirection); // add event listener\n      return () => {\n        window.removeEventListener(\"scroll\", updateScrollDirection); // clean up\n      }\n    }, [scrollDirection]);\n  \n    return scrollDirection;\n  };"]},"metadata":{},"sourceType":"module"}